name: todo-cicd
on:
  push:
    branches: [ main, refactor/feature ]
jobs:
  build:
    environment: todo
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE }}:${{ github.sha }}
      -
        name: Image Tag
        run: echo ${{ github.sha }}
  deploy:
    environment: todo
    runs-on : ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
  
      - name: create env file
        run: |
          cat << EOF >> .env
          DB_PORT=${{ vars.DB_PORT }}
          DB_USER=${{ vars.DB_USER }}
          DB_NAME=${{ secrets.DB_NAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_HOST=${{ vars.DB_HOST }}
          EOF

      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.RSHKEY }}
          port: 22
          source: "docker-compose.yaml,.env"
          target: "/home/ubuntu"

      - name: excuting remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.RSHKEY }}
          port: 22
          script: |
            export DB_NAME=${{ vars.DB_NAME }}
            export DB_PASSWORD=${{ vars.DB_PASSWORD }}
            export TODOIMAGE=${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_IMAGE }}:${{ github.sha }}
            sed -i 's#TODOIMAGE#'"$TODOIMAGE"'#g' docker-compose.yaml 
            sudo docker-compose up -d